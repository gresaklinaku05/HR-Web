{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klina\\\\Desktop\\\\HR-Web\\\\react-admin\\\\src\\\\components\\\\SalaryManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Form } from 'react-bootstrap';\nimport { getEmployees, updateSalary } from '../services/employeeService'; // Përdorni shërbimin për punonjësit\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalaryManager = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [salary, setSalary] = useState(0);\n  useEffect(() => {\n    // Merr të gjithë punonjësit për të mundësuar përditësimin e pagave\n    getEmployees().then(data => setEmployees(data)).catch(error => console.error('Error fetching employees:', error));\n  }, []);\n  const handleSalaryChange = e => {\n    setSalary(e.target.value);\n  };\n  const handleSalaryUpdate = id => {\n    // Përditëson pagën për punonjësin e zgjedhur\n    updateSalary(id, salary).then(() => {\n      alert('Paga është përditësuar me sukses!');\n      setEmployees(employees.map(emp => emp.id === id ? {\n        ...emp,\n        salary: salary\n      } : emp));\n    }).catch(error => console.error('Error updating salary:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Salary Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Emri i Punonj\\xEBsit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pag\\xEB Aktuale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Paga e Re\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Veprime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [emp.salary, \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: selectedEmployee === emp.id ? salary : '',\n              onChange: handleSalaryChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                setSelectedEmployee(emp.id);\n                setSalary(emp.salary); // Përdor pagën aktuale për t'u paraqitur në fushën e pagës së re\n              },\n              children: \"P\\xEBrdit\\xEBso Paga\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, emp.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SalaryManager, \"9aweKLcXQfR7dwqJxlof0ofb3oQ=\");\n_c = SalaryManager;\nexport default SalaryManager;\nvar _c;\n$RefreshReg$(_c, \"SalaryManager\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Form","getEmployees","updateSalary","jsxDEV","_jsxDEV","SalaryManager","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","salary","setSalary","then","data","catch","error","console","handleSalaryChange","e","target","value","handleSalaryUpdate","id","alert","map","emp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","name","Control","type","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/klina/Desktop/HR-Web/react-admin/src/components/SalaryManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Form } from 'react-bootstrap';\r\nimport { getEmployees, updateSalary } from '../services/employeeService'; // Përdorni shërbimin për punonjësit\r\n\r\nconst SalaryManager = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [salary, setSalary] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Merr të gjithë punonjësit për të mundësuar përditësimin e pagave\r\n    getEmployees()\r\n      .then((data) => setEmployees(data))\r\n      .catch((error) => console.error('Error fetching employees:', error));\r\n  }, []);\r\n\r\n  const handleSalaryChange = (e) => {\r\n    setSalary(e.target.value);\r\n  };\r\n\r\n  const handleSalaryUpdate = (id) => {\r\n    // Përditëson pagën për punonjësin e zgjedhur\r\n    updateSalary(id, salary)\r\n      .then(() => {\r\n        alert('Paga është përditësuar me sukses!');\r\n        setEmployees(\r\n          employees.map((emp) =>\r\n            emp.id === id ? { ...emp, salary: salary } : emp\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => console.error('Error updating salary:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h3>Salary Manager</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Emri i Punonjësit</th>\r\n            <th>Pagë Aktuale</th>\r\n            <th>Paga e Re</th>\r\n            <th>Veprime</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.map((emp) => (\r\n            <tr key={emp.id}>\r\n              <td>{emp.name}</td>\r\n              <td>{emp.salary} USD</td>\r\n              <td>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={selectedEmployee === emp.id ? salary : ''}\r\n                  onChange={handleSalaryChange}\r\n                />\r\n              </td>\r\n              <td>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setSelectedEmployee(emp.id);\r\n                    setSalary(emp.salary); // Përdor pagën aktuale për t'u paraqitur në fushën e pagës së re\r\n                  }}\r\n                >\r\n                  Përditëso Paga\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalaryManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}